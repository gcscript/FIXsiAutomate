<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGUAAAAgCAYAAAAL6bYQAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAABMFJREFUaEPtmt1x2zAMx+VOkA2SEbJB/djr+UPtAukG6QbpBort3vUx3SAjZISM
        4BE8gvunBCkWCeKDUt/8u8PFIiEaAgUBglNdMVA3N1X95+5DcOxh6vlXUj5t9y+Lzf58KdWqWdK0ymJz
        eI/OP1XL68ZMgnHqebHevdG0DKIiORdSrQ5PpGHjfD7/hMzJkZZuwXHTDbNsSa0Fx/fdcJYTRLzrMP+3
        1czzQKosnFODmKKlPiy5cyG+aIGRb52tszG6q8JxN8zymdQGMKbZk73rMPerU8nSkCpP3dwzDu3EEi2b
        wyN7LsQVLWTsnIwuHMfh7s6R3D0YW3ZTWdhowZi2Ie8Q+W5dHWrOob2o0bLZN9x5JLZogZHa46KER1o+
        rH/XDbGcSC0Bc65owXHdDWc5Qu5IPY/sVDVaFtvDG3seiSlaYKh2MSUMjyR8lu767AVizhwt+Bs2XorG
        MKdvCNCcGkSKFsyfYv1I9GiBsU+t2fMyfCk+P3ZDLOLzHfNqtEDChoQokKhpSZXgtMiJqeSiJVN5xaJG
        Cwx+7exmeYGEC/fIqLLBsbT+qPKKwbwlWkKekLAnV6NTg7DRkq+8YpGjBUZLF2UKeQmsIa1/T2pZoDOl
        MrRvSMDuVD5ahMorlmy0wOibznaWbBL2QGuxkIoI1LRoyaGXrzEOpwaJo2Wx3b9yehnhowWGSxf8TmrF
        YA2psjOvD11vtNgqrRit8ooFm0BntrCdAEHYaIHhUhL2knwBxqTKbnRBEtD1REvZhgBL5RUL8tDwXdy8
        Imm0wHip/eElaV1gTFrf9byHvjVa1DyVIzgpcpoqoXnZnix1AgRJogUXMCWJxnjbJYm+BPQtUT28tLop
        dGqQ9m5XOgGCjHM3LkJ64fKSJC2MSe8Prjsa+lJp3VO+KYVOrdaUVzaHJ25ek2q1+4gUXIBUeXlJkjbG
        ZqvsoK/1tHpG3WkXRU7dHfuc4Ky8Whk2tAcXUFpqciRJG2PS+uZyFbrenxXEtnwOv1OxIV8uk7yv8rrc
        0AEYLz2jw6PiwSHJowhjxe2VHuiV3DhF0eIuZ782H9fs6AR0Mt7QARhf3P6wgDWkykt99kPH0tPK4Y4W
        3nm8IA+M7fd0Aja7E7shARg+qf2hgTWKKy/MT9mQgC9aHJXXKDH3rPc/OF1OqlWTb46S8SykMgksI1V2
        aXvhAsxrTcYQhVrlqP9022OsvJLE3GPsBLAb2gODpfaHv2cUgTWk9cW7GPPPnVqWNh/hb+hIS9ivw+RU
        JjETpt9g1s9yHoXBUvuje0OdANYoqrwwp/6cS6pBN5Tcs0SL7tRMYiago3QCdnqfD8ZKd1n5CxiBNaT1
        2RDGuPvnXBzPEi1w3DF1ZC9CYg6olZe8oQMwVqq8XO0PDqzhquwwpv2cyzYZMTY9WhSnVpudXMmJlZey
        oZfAUCmRiknYAtYwV3Y4tlRa2WoQc9OiRXCqmJh7pH8pWu/tNzgZy1HepriA1mIhlQEMaU1R8XGKeUu0
        5Ev8jFPVxNyTKRJMG5oDBt/2QkOzgTWDw/7L2jGX3xU+07AO61RDYia4ImHShlzhnGpMzATOGRUJlfV/
        jq8IhA3AG331/fdt9Q05IPMukiWcG87rxXt+VVX/ACFn9pwaiavvAAAAAElFTkSuQmCC
</value>
  </data>
</root>